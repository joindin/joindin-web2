name: "Continuous Integration"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
#  dependency-analysis:
#    name: "Dependency Analysis"
#
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        php-version:
#          - 7.4
#
#    steps:
#      - name: "Checkout"
#        uses: actions/checkout@v3
#
#      - name: "Install PHP with extensions"
#        uses: shivammathur/setup-php@master
#        with:
#          php-version: ${{ matrix.php-version }}
#          extensions: "gd, intl, json, mbstring, pdo"
#
#      - name: "Cache dependencies installed with composer"
#  id: composer-cache
#  uses: actions/cache@v3
#  with:
#    path: vendor
#    key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
#    restore-keys: |
#      ${{ runner.os }}-php-
#
#      - name: "Install dependencies with composer"
#        run: composer install --prefer-dist --no-progress
#
#      - name: "Run dependency analysis with composer-require-checker"
#        run: vendor/bin/composer-require-checker --config-file=composer-require-checker.json
#
#  static-analysis:
#    name: "Static Analysis"
#
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        php-version:
#          - 7.4
#
#    steps:
#      - name: "Checkout"
#        uses: actions/checkout@v3
#
#      - name: "Install PHP with extensions"
#        uses: shivammathur/setup-php@master
#        with:
#          php-version: ${{ matrix.php-version }}
#          pecl: true
#          extensions: "gd, intl, json, mbstring, pdo"
#
#      - name: "Cache dependencies installed with composer"
#  id: composer-cache
#  uses: actions/cache@v3
#  with:
#    path: vendor
#    key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
#    restore-keys: |
#      ${{ runner.os }}-php-
#
#      - name: "Install dependencies with composer"
#        run: composer install --prefer-dist --no-progress
#
#      - name: "Run static analysis with phpstan"
#        run: vendor/bin/phpstan analyze --configuration=phpstan.neon
  parallel-lint:
    name: "Parallel Lint"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - 7.4

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php-version }}
          extensions: "gd, intl, json, mbstring, pdo"
          coverage: "xdebug"

      - name: "Cache dependencies installed with composer"
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: "Install dependencies with composer"
        run: composer install --prefer-dist --no-progress

      - name: "Lint the files"
        run: vendor/bin/parallel-lint --exclude vendor .
  phpcs:
    name: "PHPCS"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - 7.4

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php-version }}
          extensions: "gd, intl, json, mbstring, pdo"
          coverage: "xdebug"

      - name: "Cache dependencies installed with composer"
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: "Install dependencies with composer"
        run: composer install --prefer-dist --no-progress

      - name: "Lint the files"
        run: vendor/bin/phpcs --standard=psr2 --ignore=vendor --extensions=php --runtime-set ignore_warnings_on_exit true -p .
  tests:
    name: "Tests"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - 7.4

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php-version }}
          extensions: "gd, intl, json, mbstring, pdo"
          coverage: "xdebug"

      - name: "Cache dependencies installed with composer"
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: "Install dependencies with composer"
        run: composer install --prefer-dist --no-progress

      - name: "Run tests with phpunit"
        run: vendor/bin/phpunit -c ./phpunit.xml.dist --coverage-clover=build/logs/clover.xml --coverage-text

      - name: "Download code coverage uploader for Codecov.io"
        run: curl -s https://codecov.io/bash -o codecov

      - name: "Send code coverage report to Codecov.io"
        run: bash codecov -t ${{ secrets.CODECOV_TOKEN }}
